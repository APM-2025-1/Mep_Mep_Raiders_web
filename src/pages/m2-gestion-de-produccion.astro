---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import PricingCmp from '../components/Pricing.astro';
import Newsletter from '../components/Newsletter.astro';
import Footer from '../components/Footer.astro';
import HeroSection from '../components/HeroSection.astro';
---

<Layout title="Mep Mep Raiders - Módulo 2: Gestión de Producción" description="Explora el análisis de una planta mediante software de simulación, integrando fallas de equipos, disponibilidad, calidad, tiempos de set-up y producción, balance de líneas, gestión de colas y cálculo del OEE. Aprende sobre estrategias de pre-automatización y la integración con sistemas MES.">
  <Header />
  <main>
    <HeroSection 
      title="Módulo 2: Gestión de Producción" 
      highlightText="Módulo 2:"
      description="Este módulo aborda el análisis de una planta mediante software de simulación, integrando aspectos clave como fallas de equipos, disponibilidad, calidad, tiempos de set-up y producción, balance de líneas, gestión de colas y cálculo del OEE. Se consideran además estrategias de pre-automatización, con el uso de diagramas VSM antes y después de aplicar mejoras. Finalmente, se propone una metodología para integrar los datos generados en planta con un sistema MES (Manufacturing Execution System)"
    />

    <!-- VSM Viejito -->
    <section class="section relative z-10 overflow-hidden py-12 md:py-16">
      <div class="container-custom">

        <div class="text-center max-w-3xl mx-auto mb-8 md:mb-16 px-4">
          <span class="inline-block px-4 py-1 rounded-full bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-300 font-medium text-sm mb-4">
            Pre-automatización
          </span>
          <h2 class="text-2xl md:text-3xl mb-4 md:mb-6 text-gray-900 dark:text-white">Diagrama VSM</h2>
          <p class="text-gray-600 dark:text-gray-300">
            Analisis de producción en la pre-automatización.
          </p>
        </div>
        
        <div class="relative mx-auto max-w-[1000px] h-[520px] overflow-hidden bg-white rounded-lg" id="zoomWrapper">

          <img src="https://imgur.com/d7R0lIO.png"
              id="zoomImage"
              class="absolute top-0 left-0 transition-transform ease-out duration-100 origin-top-left"
          />

          <!-- Controles -->
          <div class="absolute bottom-4 right-4 z-10 grid grid-cols-3 grid-rows-3 gap-2 bg-primary-500 dark:bg-primary-900 p-2 rounded-lg shadow-md">
            <div></div>
            <button id="moveUp" class="w-10 h-10 bg-accent-400 text-primary-600 hover:bg-accent-500 dark:bg-accent-600 text-primary-800 rounded hover:bg-accent-700">↑</button>
            <div></div>

            <button id="moveLeft" class="w-10 h-10 bg-accent-400 text-primary-600 hover:bg-accent-500 dark:bg-accent-600 text-primary-800 rounded hover:bg-accent-700">←</button>
            <button id="centerBtn" class="w-10 h-10 bg-info-200 text-primary-600 rounded hover:bg-info-400 dark:bg-info-400 text-primary-800 rounded hover:bg-info-600">⟳</button>
            <button id="moveRight" class="w-10 h-10 bg-accent-400 text-primary-600 hover:bg-accent-500 dark:bg-accent-600 text-primary-800 rounded hover:bg-accent-700">→</button>

            <button id="zoomOut" class="w-10 h-10 bg-info-200 text-primary-600 rounded hover:bg-info-400 dark:bg-info-400 text-primary-800 rounded hover:bg-info-600">−</button>
            <button id="moveDown" class="w-10 h-10 bg-accent-400 text-primary-600 hover:bg-accent-500 dark:bg-accent-600 text-primary-800 rounded hover:bg-accent-700">↓</button>
            <button id="zoomIn" class="w-10 h-10 bg-info-200 text-primary-600 rounded hover:bg-info-400 dark:bg-info-400 text-primary-800 rounded hover:bg-info-600">+</button>
          </div>
        </div>
      </div>
    </section>

    <!-- VSM Nuevo -->
    <section class="section bg-gray-50 dark:bg-gray-800/50 relative overflow-hidden py-12 md:py-16">
      <div class="container-custom">

        <div class="text-center max-w-3xl mx-auto mb-8 md:mb-16 px-4">
          <span class="inline-block px-4 py-1 rounded-full bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-300 font-medium text-sm mb-4">
            Post-automatización
          </span>
          <h2 class="text-2xl md:text-3xl mb-4 md:mb-6 text-gray-900 dark:text-white">Diagrama VSM</h2>
          <p class="text-gray-600 dark:text-gray-300">
            Analisis de producción en la post-automatización.
          </p>
        </div>

        <div class="relative mx-auto max-w-[1000px] h-[800px] overflow-hidden bg-white rounded-lg" id="zoomWrapper">

          <img src="https://i.imgur.com/r3Lzkl6.png"
              id="zoomImage"
              class="absolute top-0 left-0 transition-transform ease-out duration-100 origin-top-left"
          />

          <!-- Controles -->
          <div class="absolute bottom-4 right-4 z-10 grid grid-cols-3 grid-rows-3 gap-2 bg-primary-500 dark:bg-primary-900 p-2 rounded-lg shadow-md">
            <div></div>
            <button id="moveUp" class="w-10 h-10 bg-accent-400 text-primary-600 hover:bg-accent-500 dark:bg-accent-600 text-primary-800 rounded hover:bg-accent-700">↑</button>
            <div></div>

            <button id="moveLeft" class="w-10 h-10 bg-accent-400 text-primary-600 hover:bg-accent-500 dark:bg-accent-600 text-primary-800 rounded hover:bg-accent-700">←</button>
            <button id="centerBtn" class="w-10 h-10 bg-info-200 text-primary-600 rounded hover:bg-info-400 dark:bg-info-400 text-primary-800 rounded hover:bg-info-600">⟳</button>
            <button id="moveRight" class="w-10 h-10 bg-accent-400 text-primary-600 hover:bg-accent-500 dark:bg-accent-600 text-primary-800 rounded hover:bg-accent-700">→</button>

            <button id="zoomOut" class="w-10 h-10 bg-info-200 text-primary-600 rounded hover:bg-info-400 dark:bg-info-400 text-primary-800 rounded hover:bg-info-600">−</button>
            <button id="moveDown" class="w-10 h-10 bg-accent-400 text-primary-600 hover:bg-accent-500 dark:bg-accent-600 text-primary-800 rounded hover:bg-accent-700">↓</button>
            <button id="zoomIn" class="w-10 h-10 bg-info-200 text-primary-600 rounded hover:bg-info-400 dark:bg-info-400 text-primary-800 rounded hover:bg-info-600">+</button>
          </div>
        </div>
      </div>
    </section>

  </main>
  <Footer />
</Layout>

<script>
  const wrapper = document.getElementById('zoomWrapper');
  const image = document.getElementById('zoomImage');
  const zoomInBtn = document.getElementById('zoomIn');
  const zoomOutBtn = document.getElementById('zoomOut');
  const centerBtn = document.getElementById('centerBtn');
  const moveUpBtn = document.getElementById('moveUp');
  const moveDownBtn = document.getElementById('moveDown');
  const moveLeftBtn = document.getElementById('moveLeft');
  const moveRightBtn = document.getElementById('moveRight');

  let scale = 1;
  let translateX = 0;
  let translateY = 0;
  let naturalWidth = 0;
  let naturalHeight = 0;

  function updateTransform() {
    image.style.transform = `translate(${translateX}px, ${translateY}px) scale(${scale})`;
  }

  function centerImage() {
    const wrapperRect = wrapper.getBoundingClientRect();
    const displayWidth = naturalWidth;
    const displayHeight = naturalHeight;
    scale = 1;
    translateX = 0;
    translateY = 0;
    updateTransform();
  }

  image.addEventListener('load', () => {
    const wrapperRect = wrapper.getBoundingClientRect();
    naturalWidth = image.naturalWidth;
    naturalHeight = image.naturalHeight;

    const scaleFit = Math.min(wrapperRect.width / naturalWidth, wrapperRect.height / naturalHeight);
    scale = scaleFit;

    centerImage();
  });

  function zoom(factor) {
    const wrapperRect = wrapper.getBoundingClientRect();
    const centerX = wrapperRect.width / 2 - translateX;
    const centerY = wrapperRect.height / 2 - translateY;

    const newScale = Math.min(Math.max(0.2, scale * factor), 5);
    translateX -= centerX * (newScale - scale) / scale;
    translateY -= centerY * (newScale - scale) / scale;
    scale = newScale;
    updateTransform();
  }

  zoomInBtn.addEventListener('click', () => zoom(1.2));
  zoomOutBtn.addEventListener('click', () => zoom(1 / 1.2));
  centerBtn.addEventListener('click', () => centerImage());

  const moveStep = 40; // Pixels por movimiento
  moveUpBtn.addEventListener('click', () => { translateY += moveStep; updateTransform(); });
  moveDownBtn.addEventListener('click', () => { translateY -= moveStep; updateTransform(); });
  moveLeftBtn.addEventListener('click', () => { translateX += moveStep; updateTransform(); });
  moveRightBtn.addEventListener('click', () => { translateX -= moveStep; updateTransform(); });
</script>
